/**
 * Copyright 2016 Dmytro Zaitsev
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

//apply plugin: 'com.dzaitsev.rxviper.gradle'

apply plugin: com.dzaitsev.rxviper.plugin.RxViperPlugin

android {
  compileSdkVersion androidConfig.compileSdkVersion
  buildToolsVersion androidConfig.buildToolsVersion

  defaultConfig {
    applicationId "com.dzaitsev.rxviper.sample"
    minSdkVersion androidConfig.minSdkVersion
    targetSdkVersion androidConfig.targetSdkVersion
    versionCode androidConfig.versionCode
    versionName androidConfig.versionName
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  dataBinding {
    enabled true
  }
}

dependencies {
  apt libraries.daggerCompiler
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile project(':rxviper')
  compile libraries.rxAndroid
  compile libraries.dagger
  provided libraries.jsr250
  compile libraries.appCompat
  compile libraries.design
  compile libraries.cardView
  compile libraries.constraintLayout
  testCompile libraries.junit
}

rxViper {
  packageName android.defaultConfig.applicationId
  splitPackages true
  useLambdas true
  skipExisting false
  hasInteractor true
  addMetaInfo true
  hasRouter true
  withTests false

  screens {
    foo {
      packageName rxViper.packageName
      //withTests false
      hasRouter true
      useLambdas true
      useCases {
        getItems {
          requestClass Long.class
          requestClass String.class
        }
        watchPorn {
          requestClass Void.class
          responseClass Boolean.class
        }
        buyGoods
      }
      routesTo "Home", "Settings", "Registration", "News"
    }

    bar {
      addMetaInfo false
      useLambdas false
      hasRouter false
      //withTests true
      useCases {
          login
          post
          createUser
      }
      routesTo "Auth", "Main", "UserProfile"
    }
  }
}

task genViper(type: com.dzaitsev.rxviper.plugin.RxViperTask) {
  destinationDir new File("${project.buildDir}/HELLO")
  screens rxViper.screens
}